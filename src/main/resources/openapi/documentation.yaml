openapi: "3.0.3"
info:
  title: "socialnetwork API"
  description: "socialnetwork API"
  version: "1.0.0"
servers:
- url: "https://socialnetwork"
paths:
  /chat:
    get:
      description: "Get user conversations"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ChatDTO"
        "500":
          description: "Internal Server Error"
          content:
            'application/json':
              schema:
                type: "string"
    post:
      description: "Create a conversation"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatDTO'
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            'application/json':
              schema:
                type: "string"
  /chat/{id}:
    get:
      description: "Connection to a conversation with websocket"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "Connection"
        in: "header"
        required: true
        schema:
          type: "string"
      - name: "Upgrade"
        in: "header"
        required: true
        schema:
          type: "string"
      - name: "Sec-WebSocket-Key"
        in: "header"
        required: true
        schema:
          type: "string"
      responses:
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
  /feed:
    get:
      description: "Get the user feed (Posts by the friends user's)"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PostDTO"
  /post:
    post:
      description: "Create a new post"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDTO'
        "500":
          description: "Internal Server Error"
          content:
            'application/json':
              schema:
                type: "string"
    put:
      description: "Update the user's post"
      parameters:
      - name: "id"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            'application/json':
              schema:
                type: "string"
  /signin:
    get:
      description: "Authenticate the user"
      responses:
        "200":
          description: "OK"

  /signup:
    post:
      description: "Sign up the user"
      responses:
        "200":
          description: "OK"
        "409":
          description: "Conflicts - User with this email already exists."

  /user:
    get:
      description: "Search a user"
      parameters:
      - name: "search"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UserDTO"
        "500":
          description: "Internal Server Error"
          content:
            'application/json':
              schema:
                type: "string"
  /user/{id}:
    get:
      description: "Get a user by Id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserDTO"
        "500":
          description: "Internal Server Error"
          content:
            'application/json':
              schema:
                type: "string"
  /user/friend/{id}:
    put:
      description: "Add a new friend"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            'application/json':
              schema:
                type: "string"
  /user/me:
    get:
      description: "Get authenticated user's profile"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserDTO"
        "500":
          description: "Internal Server Error"
          content:
            'application/json':
              schema:
                type: "string"
components:
  schemas:
    ChatMessageDTO:
      type: "object"
      properties:
        id:
          type: "string"
        author:
          type: "string"
        createdAt:
          type: "string"
        text:
          type: "string"
        images:
          type: "array"
          items:
            type: "string"
    ChatDTO:
      type: "object"
      properties:
        id:
          type: "string"
        users:
          type: "array"
          items:
            type: "string"
        createdAt:
          type: "string"
        name:
          type: "string"
        thumbnail:
          type: "string"
        messages:
          type: "array"
          items:
            $ref: "#/components/schemas/ChatMessageDTO"
    UserDTO:
      type: "object"
      properties:
        id:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        firstname:
          type: "string"
        friends:
          type: "array"
          items:
            type: "string"
        lastname:
          type: "string"
        profileImgUrl:
          type: "string"

    PostDTO:
      type: "object"
      properties:
        id:
          type: "string"
        user:
          type: "string"
        createdAt:
          type: "string"  # Assuming LocalDateTime is serialized as a string
        text:
          type: "string"
        images:
          type: "array"
          items:
            type: "string"